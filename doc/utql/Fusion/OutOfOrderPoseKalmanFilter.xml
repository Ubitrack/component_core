<?xml version="1.0" encoding="UTF-8"?>

<UTQLPatternTemplates xmlns='http://ar.in.tum.de/ubitrack/utql'
                      xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
                      xmlns:xi='http://www.w3.org/2001/XInclude'
                      xmlns:h="http://www.w3.org/1999/xhtml"
                      xsi:schemaLocation='http://ar.in.tum.de/ubitrack/utql ../../../schema/utql_templates.xsd'>
    
    
	
	<Pattern name="SimpleOutOfOrderPoseKalmanFilter" displayName="Simple Out of Order Kalman Filter (Pose)">
    	<Description><h:p>Fuses various sources into a single pose using an extended kalman filter.</h:p></Description>
    	
        <Input>
            <Node name="A" displayName="A"/>
            <Node name="B" displayName="B"/>
            <Edge name="InPose" source="A" destination="B" displayName="Pose">
            	<Description><h:p>Receives poses with covariance. Additional inputs can be generated by adding
            	ports starting with <h:code>InPose</h:code>.</h:p></Description>
                <Predicate>type=='6DError'&amp;&amp;mode=='push'</Predicate>
            </Edge>            
        </Input>
        
        <Output>
            <Edge name="OutPose" source="A" destination="B" displayName="Fused Pose (Pull)">
            	<Description><h:p>The fused result, as pull.</h:p></Description>
                <Attribute name="type" value="6DError" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="pull" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
            <Edge name="OutPosePush" source="A" destination="B" displayName="Fused Pose (Push)">
            	<Description><h:p>The fused result, as push.</h:p></Description>
                <Attribute name="type" value="6DError" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
        </Output>
        
        <DataflowConfiguration>
            <UbitrackLib class="OutOfOrderPoseKalmanFilter"/>
            <Attribute name="insideOut" displayName="insideOut" default="true" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>When this value is set to true, the filter uses an inside-out motion model (position depends on orientation), other
            	wise, outside-in is assumed.</h:p></Description>
            </Attribute>
            <Attribute name="posPN" displayName="Position process noise" default="0.0058" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>Contains a comma-separated list of numeric values that define the process noise for each derivative. The number of values
            	define the number of derivatives. Two values e.g. specify a constant-velocity model.</h:p></Description>
            </Attribute>
            <Attribute name="oriPN" displayName="Orientation process noise" default="0.057 1.4" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>Contains a comma-separated list of numeric values that define the process noise for each derivative. The number of values
            	define the number of derivatives. Two values e.g. specify a constant-velocity model.</h:p></Description>
            </Attribute>
        </DataflowConfiguration>
    </Pattern>
	
	<Pattern name="SimpleOutOfOrderPoseKalmanFilter2Poses" displayName="Simple Out of Order Kalman Filter (2 Poses)">
    	<Description><h:p>Fuses various sources into a single pose using an extended kalman filter.</h:p></Description>
    	
        <Input>
            <Node name="A" displayName="A"/>
            <Node name="B" displayName="B"/>
            <Edge name="InPose" source="A" destination="B" displayName="Pose">
            	<Description><h:p>Receives poses with covariance. Additional inputs can be generated by adding
            	ports starting with <h:code>InPose</h:code>.</h:p></Description>
                <Predicate>type=='6DError'&amp;&amp;mode=='push'</Predicate>
            </Edge> 

			<Edge name="InPose2" source="A" destination="B" displayName="Pose2">
            	<Description><h:p>Receives poses with covariance. Additional inputs can be generated by adding
            	ports starting with <h:code>InPose2</h:code>.</h:p></Description>
                <Predicate>type=='6DError'&amp;&amp;mode=='push'</Predicate>
            </Edge>			
        </Input>
        
        <Output>
            <Edge name="OutPose" source="A" destination="B" displayName="Fused Pose (Pull)">
            	<Description><h:p>The fused result, as pull.</h:p></Description>
                <Attribute name="type" value="6DError" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="pull" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
            <Edge name="OutPosePush" source="A" destination="B" displayName="Fused Pose (Push)">
            	<Description><h:p>The fused result, as push.</h:p></Description>
                <Attribute name="type" value="6DError" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
        </Output>
        
        <DataflowConfiguration>
            <UbitrackLib class="OutOfOrderPoseKalmanFilter"/>
            <Attribute name="insideOut" displayName="insideOut" default="true" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>When this value is set to true, the filter uses an inside-out motion model (position depends on orientation), other
            	wise, outside-in is assumed.</h:p></Description>
            </Attribute>
            <Attribute name="posPN" displayName="Position process noise" default="0.0058" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>Contains a comma-separated list of numeric values that define the process noise for each derivative. The number of values
            	define the number of derivatives. Two values e.g. specify a constant-velocity model.</h:p></Description>
            </Attribute>
            <Attribute name="oriPN" displayName="Orientation process noise" default="0.057 1.4" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>Contains a comma-separated list of numeric values that define the process noise for each derivative. The number of values
            	define the number of derivatives. Two values e.g. specify a constant-velocity model.</h:p></Description>
            </Attribute>
        </DataflowConfiguration>
    </Pattern>
	
	<Pattern name="SimpleOutOfOrderPoseKalmanFilter3Poses" displayName="Simple Out of Order Kalman Filter (3 Poses)">
    	<Description><h:p>Fuses various sources into a single pose using an extended kalman filter.</h:p></Description>
    	
        <Input>
            <Node name="A" displayName="A"/>
            <Node name="B" displayName="B"/>
            <Edge name="InPose" source="A" destination="B" displayName="Pose">
            	<Description><h:p>Receives poses with covariance. Additional inputs can be generated by adding
            	ports starting with <h:code>InPose</h:code>.</h:p></Description>
                <Predicate>type=='6DError'&amp;&amp;mode=='push'</Predicate>
            </Edge> 

			<Edge name="InPose2" source="A" destination="B" displayName="Pose2">
            	<Description><h:p>Receives poses with covariance. Additional inputs can be generated by adding
            	ports starting with <h:code>InPose2</h:code>.</h:p></Description>
                <Predicate>type=='6DError'&amp;&amp;mode=='push'</Predicate>
            </Edge>	

			<Edge name="InPose3" source="A" destination="B" displayName="Pose3">
            	<Description><h:p>Receives poses with covariance. Additional inputs can be generated by adding
            	ports starting with <h:code>InPose2</h:code>.</h:p></Description>
                <Predicate>type=='6DError'&amp;&amp;mode=='push'</Predicate>
            </Edge>				
        </Input>
        
        <Output>
            <Edge name="OutPose" source="A" destination="B" displayName="Fused Pose (Pull)">
            	<Description><h:p>The fused result, as pull.</h:p></Description>
                <Attribute name="type" value="6DError" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="pull" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
            <Edge name="OutPosePush" source="A" destination="B" displayName="Fused Pose (Push)">
            	<Description><h:p>The fused result, as push.</h:p></Description>
                <Attribute name="type" value="6DError" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
        </Output>
        
        <DataflowConfiguration>
            <UbitrackLib class="OutOfOrderPoseKalmanFilter"/>
            <Attribute name="insideOut" displayName="insideOut" default="true" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>When this value is set to true, the filter uses an inside-out motion model (position depends on orientation), other
            	wise, outside-in is assumed.</h:p></Description>
            </Attribute>
            <Attribute name="posPN" displayName="Position process noise" default="0.0058" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>Contains a comma-separated list of numeric values that define the process noise for each derivative. The number of values
            	define the number of derivatives. Two values e.g. specify a constant-velocity model.</h:p></Description>
            </Attribute>
            <Attribute name="oriPN" displayName="Orientation process noise" default="0.057 1.4" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>Contains a comma-separated list of numeric values that define the process noise for each derivative. The number of values
            	define the number of derivatives. Two values e.g. specify a constant-velocity model.</h:p></Description>
            </Attribute>
        </DataflowConfiguration>
    </Pattern>
	
	<Pattern name="SimpleOutOfOrderPoseKalmanFilter4Poses" displayName="Simple Out of Order Kalman Filter (4 Poses)">
    	<Description><h:p>Fuses various sources into a single pose using an extended kalman filter.</h:p></Description>
    	
        <Input>
            <Node name="A" displayName="A"/>
            <Node name="B" displayName="B"/>
            <Edge name="InPose" source="A" destination="B" displayName="Pose">
            	<Description><h:p>Receives poses with covariance. Additional inputs can be generated by adding
            	ports starting with <h:code>InPose</h:code>.</h:p></Description>
                <Predicate>type=='6DError'&amp;&amp;mode=='push'</Predicate>
            </Edge> 

			<Edge name="InPose2" source="A" destination="B" displayName="Pose2">
            	<Description><h:p>Receives poses with covariance. Additional inputs can be generated by adding
            	ports starting with <h:code>InPose2</h:code>.</h:p></Description>
                <Predicate>type=='6DError'&amp;&amp;mode=='push'</Predicate>
            </Edge>	

			<Edge name="InPose3" source="A" destination="B" displayName="Pose3">
            	<Description><h:p>Receives poses with covariance. Additional inputs can be generated by adding
            	ports starting with <h:code>InPose2</h:code>.</h:p></Description>
                <Predicate>type=='6DError'&amp;&amp;mode=='push'</Predicate>
            </Edge>		
			<Edge name="InPose4" source="A" destination="B" displayName="Pose3">
            	<Description><h:p>Receives poses with covariance. Additional inputs can be generated by adding
            	ports starting with <h:code>InPose2</h:code>.</h:p></Description>
                <Predicate>type=='6DError'&amp;&amp;mode=='push'</Predicate>
            </Edge>				
        </Input>
        
        <Output>
            <Edge name="OutPose" source="A" destination="B" displayName="Fused Pose (Pull)">
            	<Description><h:p>The fused result, as pull.</h:p></Description>
                <Attribute name="type" value="6DError" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="pull" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
            <Edge name="OutPosePush" source="A" destination="B" displayName="Fused Pose (Push)">
            	<Description><h:p>The fused result, as push.</h:p></Description>
                <Attribute name="type" value="6DError" xsi:type="EnumAttributeReferenceType"/>
                <Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
            </Edge>
        </Output>
        
        <DataflowConfiguration>
            <UbitrackLib class="OutOfOrderPoseKalmanFilter"/>
            <Attribute name="insideOut" displayName="insideOut" default="true" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>When this value is set to true, the filter uses an inside-out motion model (position depends on orientation), other
            	wise, outside-in is assumed.</h:p></Description>
            </Attribute>
            <Attribute name="posPN" displayName="Position process noise" default="0.0058" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>Contains a comma-separated list of numeric values that define the process noise for each derivative. The number of values
            	define the number of derivatives. Two values e.g. specify a constant-velocity model.</h:p></Description>
            </Attribute>
            <Attribute name="oriPN" displayName="Orientation process noise" default="0.057 1.4" xsi:type="StringAttributeDeclarationType">
            	<Description><h:p>Contains a comma-separated list of numeric values that define the process noise for each derivative. The number of values
            	define the number of derivatives. Two values e.g. specify a constant-velocity model.</h:p></Description>
            </Attribute>
        </DataflowConfiguration>
    </Pattern>
    <!-- Attribute declarations -->
    
    <GlobalNodeAttributeDeclarations>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/1/1)"/>
    </GlobalNodeAttributeDeclarations>
    
    <GlobalEdgeAttributeDeclarations>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/1)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/2)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/3)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/4)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/5)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/6)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/7)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/8)"/>
    </GlobalEdgeAttributeDeclarations> 

    <GlobalDataflowAttributeDeclarations>
        <!-- Unfortunately, the xpointer used in Xinclude is currently restricted to the element scheme and absolute element indices in Xerces (and thus XMLBeans) -->
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/1)"/>
        <xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/2)"/>
    </GlobalDataflowAttributeDeclarations>
</UTQLPatternTemplates>
